{"ast":null,"code":"var _jsxFileName = \"D:\\\\web development practice\\\\Shopping\\\\my-app\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Spinner from '../components/Spinner';\nimport Product from '../components/Product';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const API_URL = \"https://fakestoreapi.com/products\";\n  const [loading, setLoading] = useState(false);\n  const [posts, setPosts] = useState([]);\n  async function fetchData() {\n    setLoading(true);\n    try {\n      const result = await fetch(API_URL);\n      const data = await result.json();\n      console.log(data);\n      setPosts(data);\n      console.log(posts);\n    } catch (error) {\n      console.log(error.message);\n      setPosts([]);\n    }\n    setLoading(false);\n  }\n  useEffect(() => {\n    fetchData();\n    // console.log();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full\",\n    children: loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 23\n    }, this) : posts.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex fl justify-around w-[80%] flex-wrap\",\n      children: posts.map(post =>\n      /*#__PURE__*/\n      //  console.log(\"hii\");\n      _jsxDEV(Product, {\n        post: post\n      }, post.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No data found!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 19\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"cHng2s22rcBc6o8hpaEk7bmsKB4=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","Spinner","Product","jsxDEV","_jsxDEV","Home","_s","API_URL","loading","setLoading","posts","setPosts","fetchData","result","fetch","data","json","console","log","error","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","post","id","_c","$RefreshReg$"],"sources":["D:/web development practice/Shopping/my-app/src/pages/Home.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport Spinner from '../components/Spinner';\r\nimport Product from '../components/Product';\r\n\r\n\r\nconst Home = () => {\r\n    const API_URL=\"https://fakestoreapi.com/products\";\r\n  const [loading,setLoading]=useState(false);\r\n  const [posts,setPosts]=useState([]);\r\n\r\n    async function fetchData(){\r\n        setLoading(true);\r\n        try {\r\n         const result=await fetch(API_URL);\r\n        const data=await result.json();\r\n        console.log(data);\r\n         setPosts(data);\r\n          console.log(posts);\r\n\r\n        } \r\n        catch (error) {\r\n            console.log(error.message);\r\n            setPosts([]);\r\n        }\r\n        \r\n        setLoading(false);\r\n    }\r\n\r\n    useEffect(()=>{\r\n        fetchData();\r\n        // console.log();\r\n    },[])\r\n\r\n\r\n  return (\r\n    <div className='w-full'>\r\n           {\r\n             loading?(<Spinner/>):(\r\n                posts.length>0 ?\r\n                (\r\n                    <div className='flex fl justify-around w-[80%] flex-wrap'> \r\n                  \r\n                    {posts.map((post)=>(\r\n                        //  console.log(\"hii\");\r\n                        \r\n                        <Product key={post.id} post={post} />\r\n                        \r\n                    ))\r\n                    }\r\n                  \r\n                  </div>\r\n\r\n                )\r\n                :\r\n                <div>\r\n                  <p>No data found!</p>\r\n                </div>\r\n\r\n            )\r\n           }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,OAAO,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG5C,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAMC,OAAO,GAAC,mCAAmC;EACnD,MAAM,CAACC,OAAO,EAACC,UAAU,CAAC,GAACT,QAAQ,CAAC,KAAK,CAAC;EAC1C,MAAM,CAACU,KAAK,EAACC,QAAQ,CAAC,GAACX,QAAQ,CAAC,EAAE,CAAC;EAEjC,eAAeY,SAASA,CAAA,EAAE;IACtBH,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACH,MAAMI,MAAM,GAAC,MAAMC,KAAK,CAACP,OAAO,CAAC;MAClC,MAAMQ,IAAI,GAAC,MAAMF,MAAM,CAACG,IAAI,CAAC,CAAC;MAC9BC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;MAChBJ,QAAQ,CAACI,IAAI,CAAC;MACbE,OAAO,CAACC,GAAG,CAACR,KAAK,CAAC;IAEpB,CAAC,CACD,OAAOS,KAAK,EAAE;MACVF,OAAO,CAACC,GAAG,CAACC,KAAK,CAACC,OAAO,CAAC;MAC1BT,QAAQ,CAAC,EAAE,CAAC;IAChB;IAEAF,UAAU,CAAC,KAAK,CAAC;EACrB;EAEAV,SAAS,CAAC,MAAI;IACVa,SAAS,CAAC,CAAC;IACX;EACJ,CAAC,EAAC,EAAE,CAAC;EAGP,oBACER,OAAA;IAAKiB,SAAS,EAAC,QAAQ;IAAAC,QAAA,EAEdd,OAAO,gBAAEJ,OAAA,CAACH,OAAO;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,GAChBhB,KAAK,CAACiB,MAAM,GAAC,CAAC,gBAEVvB,OAAA;MAAKiB,SAAS,EAAC,0CAA0C;MAAAC,QAAA,EAExDZ,KAAK,CAACkB,GAAG,CAAEC,IAAI;MAAA;MACZ;MAEAzB,OAAA,CAACF,OAAO;QAAe2B,IAAI,EAAEA;MAAK,GAApBA,IAAI,CAACC,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAe,CAEvC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGC,CAAC,gBAIRtB,OAAA;MAAAkB,QAAA,eACElB,OAAA;QAAAkB,QAAA,EAAG;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB;EAER;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEJ,CAAC;AAEV,CAAC;AAAApB,EAAA,CAzDKD,IAAI;AAAA0B,EAAA,GAAJ1B,IAAI;AA2DV,eAAeA,IAAI;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}